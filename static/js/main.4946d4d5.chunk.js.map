{"version":3,"sources":["images/menu (1).svg","images/close.svg","Components/BtnToogle.js","Components/AlertHistory.js","images/044-gps.svg","Components/Navbar.js","images/BluewithBrownRopeTravelLogo.png","images/045-thermometer.svg","images/046-thermometer.svg","Components/Carrusel.js","images/011-wind.svg","images/032-drop.svg","images/042-cyclone.svg","images/033-barometer.svg","images/undraw_Location_search_re_ttoj (1).svg","Components/DashBoard.js","images/Dual Ring-1s-200px.svg","Components/Loader.js","images/undraw_Country_side_k696.svg","Components/Geolocation.js","App.js","index.js"],"names":["BtnToogle","setIsOpenMenu","isOpenMenu","onClick","className","src","close","alt","open","AlertHistory","cityName","countryName","index","deletePlace","sendData","e","initialForm","Navbar","setDataToSearch","setLoader","setGeolo","useState","form","setForm","historySearch","setHistorySearch","show","handleChange","target","name","value","CloseMenumy","indice","newTodos","splice","city","country","geolocations","navigator","geolocation","getCurrentPosition","position","lat","long","coords","latitude","longitude","console","log","style","cursor","gps","width","onSubmit","preventDefault","handleSubmit","required","type","placeholder","onChange","map","el","Carrusel","forecastData","itemCa","setItemCa","fecha","Date","fechaForecast","dia","getDate","mes","getMonth","anio","getFullYear","useEffect","daily","id","role","weather","icon","description","tempmaxima","parseFloat","temp","max","toFixed","tempminima","min","DashBoard","limpiarStorage","renderCity","renderCountry","renderForecast","geolo","cityData","setCityData","countryData","setCountryData","setForecastData","SearchImg","to","main","temp_min","temp_max","coord","lon","wind","speed","humidity","seaLevel","sea_level","barometer","pressure","Loader","LoaderSvg","Geolocation","mapaGoogle","setMapaGoogle","mapaGoogleRender","setMapaGoogleRender","a","axios","get","response","data","error","getDataNameGeolo","SearchUbcation","sys","App","isBegin","setIsBegin","dataToSearch","setRenderCountry","setRenderForecast","setRenderCity","loader","responseDataName","responseDataActuallyCountry","responseDataForecast","responseDataCityName","alpha3Code","getDataName","exact","path","logo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4946d4d5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/menu (1).d37a066f.svg\";","export default __webpack_public_path__ + \"static/media/close.3705f3ed.svg\";","import React from \"react\";\r\nimport \"./BtnToggle.css\"\r\nimport open from \"../images/menu (1).svg\";\r\nimport close from \"../images/close.svg\";\r\n\r\n\r\nconst BtnToogle=({setIsOpenMenu, isOpenMenu})=>{\r\n\r\n\r\n    const MenuToogle=()=>{\r\n\r\n        // setToogle(!toggle)\r\n        setIsOpenMenu(!isOpenMenu)\r\n    }\r\n\r\n    return(\r\n\r\n        <div onClick={MenuToogle} className=\"mobile-nav-toggle\">\r\n            {isOpenMenu \r\n            ? \r\n            <img src={close} alt=\"close\" className=\"my-img-toogle\"/> \r\n            : \r\n            <img src={open} alt=\"open\" className=\"my-img-toogle\"/>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BtnToogle;","import React from \"react\";\r\n\r\n\r\nconst AlertHistory=({cityName, countryName, index, deletePlace, sendData})=>{\r\n\r\n\r\n    return(\r\n\r\n      <div className=\"alert alert-info d-flex align-items-center justify-content-between\">\r\n      \r\n        {cityName}, \r\n        {countryName}\r\n        \r\n\r\n        <div>\r\n        <button className=\"btn\" onClick={(e)=> sendData(cityName, countryName)}>\r\n        <i className=\"fas fa-search\"></i>\r\n        </button>\r\n\r\n        <button className=\"btn\" onClick={(e)=> deletePlace(index)}>\r\n        <i className=\"far fa-trash-alt\"></i>\r\n        </button>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AlertHistory;","export default __webpack_public_path__ + \"static/media/044-gps.becbaa60.svg\";","import React, { useState } from \"react\";\r\nimport AlertHistory from \"./AlertHistory\";\r\n// import \"../bootstrap.css\";\r\nimport gps from \"../images/044-gps.svg\";\r\n\r\nimport \"./Navbar.css\";\r\n\r\nconst initialForm={\r\n\r\n    countryName: \"\",\r\n    cityName: \"\"\r\n}\r\n\r\nconst Navbar =({isOpenMenu, setIsOpenMenu, setDataToSearch, setLoader, setGeolo})=>{\r\n\r\n    const [form, setForm] = useState(initialForm);\r\n    const [historySearch, setHistorySearch] = useState([]);\r\n    \r\n\r\n    let show = \"navbar\"\r\n\r\n    if(isOpenMenu){\r\n\r\n        show += \" mostrar\"\r\n    }\r\n\r\n    const handleChange=(e)=>{\r\n\r\n        setForm({\r\n            ...form,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        setHistorySearch([...historySearch, form])\r\n        sendData(form.cityName, form.countryName)\r\n        setForm(initialForm)\r\n        setLoader(true)\r\n        CloseMenumy()\r\n    }\r\n\r\n    const CloseMenumy=()=>{\r\n\r\n        setIsOpenMenu(false)\r\n\r\n    }\r\n\r\n\r\n    const deletePlace = (indice) => {\r\n        const newTodos = [...historySearch]\r\n        newTodos.splice(indice, 1)\r\n        setHistorySearch(newTodos)\r\n    }\r\n\r\n\r\n    const sendData=(city, country)=>{\r\n        CloseMenumy()\r\n        setDataToSearch({\r\n\r\n            cityName:city,\r\n            countryName: country\r\n        })\r\n        setLoader(true)\r\n    }\r\n\r\n\r\n    const getDataCoordenadas=()=>{\r\n\r\n        CloseMenumy()\r\n        setLoader(true)\r\n        geolocations()\r\n        \r\n    }\r\n\r\n    const geolocations=()=>{\r\n\r\n        navigator.geolocation.getCurrentPosition(OnSucces, OnError)\r\n    \r\n        function OnSucces(position){\r\n    \r\n            let lat,\r\n                long;\r\n        \r\n            lat = position.coords.latitude;\r\n            long = position.coords.longitude;\r\n            \r\n            let coors ={\r\n        \r\n                lat,\r\n                long\r\n            }\r\n        \r\n            setGeolo(coors)\r\n        \r\n        \r\n        }\r\n        \r\n        \r\n        function OnError(){\r\n        \r\n        \r\n            console.log(\"no se pudo acceder a la geolocalización\");\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n\r\n        <nav className={show}>\r\n\r\n            <div className=\"banner-places\">\r\n                    <div className=\"item-lista\" style={{cursor:\"pointer\"}} onClick={getDataCoordenadas}>\r\n                        <div>\r\n                            <img src={gps} alt=\"icon\" className=\"icon-menu\" style={{width:\"60px\", cursor:\"pointer\"}}/>\r\n                            My ubication\r\n                        </div>\r\n                    </div>\r\n                <form className=\"row g-3\" onSubmit={(e)=> handleSubmit(e)}>\r\n                    <div className=\"col-12\">\r\n                        <input required type=\"text\" className=\"form-control\"  placeholder=\"City name\" onChange={handleChange} value={form.cityName} name=\"cityName\"/>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <input required type=\"text\" className=\"form-control\"  placeholder=\"Country name\" onChange={handleChange} value={form.countryName} name=\"countryName\"/>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <button type=\"submit\" className=\"btn btn-primary mb-3\" >Search</button>\r\n                    </div>\r\n                </form>\r\n\r\n                <div className=\"w-100\">\r\n                    {\r\n                        historySearch.map((el, index)=>{\r\n\r\n                            return(\r\n\r\n                                <AlertHistory \r\n                                    countryName={el.countryName} \r\n                                    cityName={el.cityName} \r\n                                    index={index} \r\n                                    deletePlace={deletePlace} \r\n                                    key={index}\r\n                                    sendData={sendData}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n            \r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/BluewithBrownRopeTravelLogo.11f6febf.png\";","export default __webpack_public_path__ + \"static/media/045-thermometer.f7a90ca7.svg\";","export default __webpack_public_path__ + \"static/media/046-thermometer.bb48d97e.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport tempminima from \"../images/045-thermometer.svg\"\r\nimport tempmaxima from \"../images/046-thermometer.svg\"\r\nimport \"./Carrusel.css\"\r\n\r\nconst Carrusel=({forecastData})=> {\r\n\r\n    const [itemCa, setItemCa] =useState([]);\r\n\r\n   \r\n    let fecha = new Date();\r\n\r\n\r\n    let fechaForecast={\r\n\r\n\r\n        dia: fecha.getDate(),\r\n        mes: fecha.getMonth(),\r\n        anio: fecha.getFullYear()\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        setItemCa(forecastData.daily)\r\n    }, [forecastData])\r\n\r\n    \r\n    return(\r\n\r\n        <div id=\"carouselExampleIndicators\" className=\"carousel slide my-margin\" data-bs-ride=\"carousel\">\r\n        \r\n        <div className=\"carousel-inner\">\r\n            \r\n        <div className=\"carousel-item active\">\r\n            <h2 className=\"alert alert-info text-center\" role=\"alert\">\r\n                Daily Report\r\n            </h2>\r\n        </div>\r\n\r\n        {\r\n            itemCa.map((el, index)=>{\r\n                if(fechaForecast.dia > 31){\r\n\r\n                    fechaForecast.dia = 1\r\n                }else{\r\n\r\n                    fechaForecast.dia += 1\r\n                }\r\n\r\n                \r\n                \r\n                return(\r\n\r\n                    <div className=\"carousel-item\" key={index}>\r\n                    <div className=\"card px-4 py-3 w-75 mx-auto\" role=\"alert\" >\r\n                        <h2 className=\"text-center\">{fechaForecast.dia}/{fechaForecast.mes}/{fechaForecast.anio}</h2>\r\n                        <div className=\"text-center\">\r\n                            <img src={`http://openweathermap.org/img/wn/${el.weather[0].icon}@2x.png`} alt=\"images\"/>\r\n                        </div>\r\n                        <h2 className=\"text-center\">{el.weather[0].description}</h2>\r\n                        <div className=\"text-center\">\r\n                            <span className=\"mx-2\">\r\n                            <img src={tempmaxima} alt=\"temp_minima\" style={{width:\"60px\"}}/>\r\n                            {parseFloat(el.temp.max - 273).toFixed(2)}C°</span>\r\n                            <span className=\"mx-2\">\r\n                            <img src={tempminima} alt=\"temp_minima\" style={{width:\"60px\"}}/>\r\n                            {parseFloat(el.temp.min - 273).toFixed(2)}C°</span>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n            \r\n        </div>\r\n        <button className=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide=\"prev\">\r\n            <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n            <span className=\"visually-hidden\">\r\n            <i className=\"fas fa-arrow-left\"></i>\r\n            </span>\r\n        </button>\r\n        <button className=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide=\"next\">\r\n            <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n            <span className=\"visually-hidden\">\r\n            <i className=\"fas fa-arrow-right\"></i>\r\n            </span>\r\n        </button>\r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default Carrusel;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/011-wind.f3e72bae.svg\";","export default __webpack_public_path__ + \"static/media/032-drop.6309a878.svg\";","export default __webpack_public_path__ + \"static/media/042-cyclone.5a9493d8.svg\";","export default __webpack_public_path__ + \"static/media/033-barometer.bc4f05f0.svg\";","export default __webpack_public_path__ + \"static/media/undraw_Location_search_re_ttoj (1).05ed6290.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport Carrusel from \"./Carrusel\";\r\nimport \"./DashBoard.css\";\r\nimport tempminima from \"../images/045-thermometer.svg\"\r\nimport tempmaxima from \"../images/046-thermometer.svg\"\r\nimport wind from \"../images/011-wind.svg\"\r\nimport humidity from \"../images/032-drop.svg\"\r\nimport seaLevel from \"../images/042-cyclone.svg\"\r\nimport barometer from \"../images/033-barometer.svg\"\r\nimport SearchImg from \"../images/undraw_Location_search_re_ttoj (1).svg\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst DashBoard=({limpiarStorage, renderCity, renderCountry, renderForecast, geolo})=>{\r\n\r\n\r\n\r\n    const [cityData, setCityData] = useState(null);\r\n    const [countryData, setCountryData] = useState(null);\r\n    const [forecastData, setForecastData] = useState(null);\r\n    // const [mapaMostrar, setMapaMostrar] = useState(null);\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        setCityData(renderCity)\r\n        setCountryData(renderCountry)\r\n        setForecastData(renderForecast)\r\n\r\n    }, [renderCity, renderCountry, renderForecast])\r\n\r\n\r\n    \r\n    \r\n\r\n    \r\n    return(\r\n        <>\r\n        {\r\n\r\n            !cityData &&\r\n            \r\n            <div className=\"logo-empezar-bg\">\r\n              <div className=\"logo-empezar\">\r\n                \r\n                <img src={SearchImg} alt=\"isBegin\" style={{width:\"300px\"}}/>\r\n                <h2 className=\"alert alert-info mt-5\">\r\n                  Search place\r\n                </h2>\r\n                            {\r\n                                geolo &&\r\n                                <div className=\"text-center my-4\">\r\n        \r\n                                <Link className=\"btn btn-info\" to=\"/geolocation\">\r\n                                        go to my ubication\r\n                                </Link>\r\n\r\n                                \r\n\r\n                                </div>\r\n                            }\r\n              </div>\r\n              \r\n            </div>\r\n        }\r\n\r\n        {\r\n\r\n            cityData &&\r\n            <section className=\"dashboard\">\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 py-4\">\r\n\r\n                   \r\n                    {\r\n\r\n                        cityData && \r\n                        <>\r\n                            <div className=\"card px-4 py-3\">\r\n                            <div className=\"w-100 text-center\">\r\n                                <img src={`http://openweathermap.org/img/wn/${cityData.weather[0].icon}@2x.png`} alt=\"icon\" className=\"img-fluid\"/>\r\n                            </div>\r\n                            <h2 className=\"text-center d-flex flex-column\">\r\n                                \r\n                                <span className=\"display-2\">{cityData.name}</span>\r\n                                <span className=\"display-2\" >{countryData}</span>\r\n                            </h2>\r\n                            <h2 className=\"text-center\">\r\n                                {cityData.weather[0].description}\r\n                            </h2>\r\n                        \r\n                            <p className=\"text-center\">\r\n                                    <span>\r\n                                        <img src={tempminima} alt=\"temp_minima\" style={{width:\"60px\"}}/>\r\n                                        {parseFloat(cityData.main.temp_min - 273).toFixed(2)}C°\r\n                                    </span>\r\n\r\n                                    <span>\r\n                                        <img src={tempmaxima} alt=\"temp_minima\" style={{width:\"60px\"}}/>\r\n                                        {parseFloat(cityData.main.temp_max - 273).toFixed(2)}C°\r\n                                    </span>\r\n                                    \r\n                                    \r\n                            </p>\r\n\r\n                            <p className=\"text-center d-flex flex-column\">\r\n                                    <span>latitud: {cityData.coord.lat}</span>\r\n                                    <span>lonigutd: {cityData.coord.lon}</span>\r\n                            </p>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                    \r\n                    \r\n                    \r\n                </div>\r\n\r\n                <div className=\"col-12 py-4 align-items-center\">\r\n\r\n                    \r\n                    \r\n\r\n                    \r\n                    {forecastData && <Carrusel forecastData={forecastData}/>}\r\n                    \r\n                    \r\n\r\n                </div>\r\n                \r\n                </div>\r\n                \r\n            </div>\r\n\r\n            {\r\n                        cityData &&\r\n                        <div>\r\n                            {\r\n                                geolo &&\r\n                                <div className=\"text-center my-4\">\r\n        \r\n                                <Link className=\"btn btn-info\" to=\"/geolocation\">\r\n                                        go to my ubication\r\n                                </Link>\r\n\r\n                                \r\n\r\n                                </div>\r\n                            }\r\n                            <h2 className=\"text-white text-center mt-4 mb-4\">Today´s Highlights</h2>\r\n                            <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 col-md-6 py-4\">\r\n                                    <div className=\"card\">\r\n                                        <h2 className=\" text-center mt-4\">Wind status</h2>\r\n                                        <p className=\" text-center display-5\">\r\n                                        <img src={wind} alt=\"temp_minima\" style={{width:\"60px\"}}/>\r\n                                        <span className=\"mx-4\">{cityData.wind.speed} </span>\r\n                                        MPH</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6 py-4\">\r\n                                <div className=\"card\">\r\n                                        <h2 className=\" text-center mt-4\">Humidity</h2>\r\n                                        <p className=\" text-center display-5\">\r\n                                        <img src={humidity} alt=\"temp_minima\" style={{width:\"60px\"}}/>\r\n                                        <span className=\"mx-4\">{cityData.main.humidity}</span>\r\n                                        %\r\n                                        <div className=\"container mt-2\">\r\n                                        <div className=\"progress\">\r\n                                            <div className=\"progress-bar bg-warning\" role=\"progressbar\" style={{width:`${cityData.main.humidity}%`}} aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                        </div>\r\n                                        </div>\r\n                                        \r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6 py-4\">\r\n                                <div className=\"card\">\r\n                                        <h2 className=\" text-center mt-4\">sea level</h2>\r\n                                        <p className=\" text-center display-5\">\r\n                                        <img src={seaLevel} alt=\"temp_minima\" style={{width:\"60px\"}}/>\r\n                                        <span className=\"mx-4\">{parseFloat(cityData.main.sea_level) / 1000} </span>\r\n                                        MSNM</p>\r\n                                </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-12 col-md-6 py-4\">\r\n                                <div className=\"card\">\r\n                                        <h2 className=\" text-center mt-4\">Pressure</h2>\r\n                                        <p className=\"px-3 text-center display-5 d-flex aligns-item-center justify-content-center\">\r\n                                        <img src={barometer} alt=\"temp_minima\" style={{width:\"60px\"}}/>\r\n                                        <span className=\"mx-4\">{parseFloat((cityData.main.pressure) * 0.000987).toFixed(2)}</span>\r\n                                        atmosphere</p>\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"text-center my-4\">\r\n        \r\n                                <button className=\"btn btn-primary\" onClick={(e)=> limpiarStorage(e)}>\r\n                                        Volver al inicio\r\n                                </button>\r\n\r\n                                \r\n\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            </div>\r\n                            \r\n                        </div>\r\n                        \r\n                    }\r\n            \r\n        </section>\r\n        }\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default DashBoard;","export default __webpack_public_path__ + \"static/media/Dual Ring-1s-200px.9c872c72.svg\";","import React from \"react\";\r\nimport \"./Loader.css\"\r\nimport LoaderSvg from \"../images/Dual Ring-1s-200px.svg\"\r\n\r\nconst Loader =()=>{\r\n\r\n\r\n    return(\r\n\r\n        <div className=\"loader\">\r\n            <img src={LoaderSvg} alt=\"loader\" style={{width:\"200px\"}}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Loader","export default __webpack_public_path__ + \"static/media/undraw_Country_side_k696.8acfca36.svg\";","import React, {useState, useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./DashBoard.css\"\r\nimport \"./Geolocation.css\"\r\nimport SearchUbcation from \"../images/undraw_Country_side_k696.svg\"\r\nimport tempminima from \"../images/045-thermometer.svg\"\r\nimport tempmaxima from \"../images/046-thermometer.svg\"\r\nimport wind from \"../images/011-wind.svg\"\r\nimport humidity from \"../images/032-drop.svg\"\r\nimport seaLevel from \"../images/042-cyclone.svg\"\r\nimport barometer from \"../images/033-barometer.svg\"\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Geolocation=({geolo})=>{\r\n\r\n    const [mapaGoogle, setMapaGoogle] = useState(null);\r\n    const [mapaGoogleRender, setMapaGoogleRender] = useState(null);\r\n    \r\n    \r\n    useEffect(()=>{\r\n\r\n        setMapaGoogle(geolo);\r\n    }, [geolo])\r\n\r\n    useEffect(()=>{\r\n\r\n        const getDataNameGeolo= async ()=>{\r\n\r\n            try {\r\n            //   const response = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${mapaGoogle.lat}&lon=${mapaGoogle.long}&exclude=hourly&appid=4d1b39580dfaf7a69c170f8b03abef5d&lang=es`);\r\n              const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${mapaGoogle.lat}&lon=${mapaGoogle.long}&&appid=4d1b39580dfaf7a69c170f8b03abef5d&lang=es`);\r\n              \r\n              setMapaGoogleRender(response.data)\r\n              \r\n            } catch (err) {\r\n              \r\n              console.error(err);\r\n              \r\n            }\r\n          }\r\n      \r\n          getDataNameGeolo()\r\n    }, [mapaGoogle])\r\n    \r\n    \r\n    return(\r\n        <>\r\n        \r\n            {\r\n\r\n                !mapaGoogleRender &&\r\n\r\n                <div className=\"logo-empezar-bg\">\r\n                <div className=\"logo-empezar\">\r\n                    <img src={SearchUbcation} alt=\"isBegin\" style={{width:\"300px\"}}/>\r\n                    <h2 className=\"alert alert-info mt-5\">\r\n                    \r\n                    {\r\n                        mapaGoogleRender ? \"Please wait\" : \"my Ubication\"\r\n                    }\r\n                    </h2>\r\n                </div>\r\n                </div>\r\n            }\r\n\r\n            \r\n            {\r\n\r\n            mapaGoogleRender &&\r\n            <section className=\"geolocation\">\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 py-4\">\r\n\r\n                \r\n                    {\r\n\r\n                        mapaGoogleRender && \r\n                        <>\r\n                            <div className=\"card px-4 py-3\">\r\n                            <div className=\"w-100 text-center\">\r\n                                <img src={`http://openweathermap.org/img/wn/${mapaGoogleRender.weather[0].icon}@2x.png`} alt=\"icon\" className=\"img-fluid\"/>\r\n                            </div>\r\n                            <h2 className=\"text-center d-flex flex-column\">\r\n                                \r\n                                <span className=\"display-2\">{mapaGoogleRender.name}</span>\r\n                                <span className=\"display-2\" >{mapaGoogleRender.sys.country}</span>\r\n                            </h2>\r\n                            <h2 className=\"text-center\">\r\n                                {mapaGoogleRender.weather[0].description}\r\n                            </h2>\r\n                        \r\n                            <p className=\"text-center\">\r\n                                    <span>\r\n                                        <img src={tempminima} alt=\"temp_minima\" style={{width:\"60px\"}}/>\r\n                                        {parseFloat(mapaGoogleRender.main.temp_min - 273).toFixed(2)}C°\r\n                                    </span>\r\n\r\n                                    <span>\r\n                                        <img src={tempmaxima} alt=\"temp_minima\" style={{width:\"60px\"}}/>\r\n                                        {parseFloat(mapaGoogleRender.main.temp_max - 273).toFixed(2)}C°\r\n                                    </span>\r\n                                    \r\n                                    \r\n                            </p>\r\n\r\n                            <p className=\"text-center d-flex flex-column\">\r\n                                    <span>latitud: {mapaGoogleRender.coord.lat}</span>\r\n                                    <span>lonigutd: {mapaGoogleRender.coord.lon}</span>\r\n                            </p>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                    \r\n                    \r\n                    \r\n                </div>\r\n\r\n                \r\n                \r\n                </div>\r\n                \r\n            </div>\r\n\r\n            {\r\n                        mapaGoogleRender &&\r\n                        <div>\r\n                            {\r\n                                geolo &&\r\n                                <div className=\"text-center my-4\">\r\n\r\n                                <Link className=\"btn btn-info\" to=\"/dashboard\">\r\n                                        go to my search place\r\n                                </Link>\r\n\r\n                                \r\n\r\n                                </div>\r\n                            }\r\n                            <h2 className=\"text-white text-center mt-4 mb-4\">Today´s Highlights</h2>\r\n                            <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 col-md-6 py-4\">\r\n                                    <div className=\"card\">\r\n                                        <h2 className=\" text-center mt-4\">Wind status</h2>\r\n                                        <p className=\" text-center display-5\">\r\n                                        <img src={wind} alt=\"temp_minima\" style={{width:\"60px\"}}/>\r\n                                        <span className=\"mx-4\">{mapaGoogleRender.wind.speed} </span>\r\n                                        MPH</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6 py-4\">\r\n                                <div className=\"card\">\r\n                                        <h2 className=\" text-center mt-4\">Humidity</h2>\r\n                                        <p className=\" text-center display-5\">\r\n                                        <img src={humidity} alt=\"temp_minima\" style={{width:\"60px\"}}/>\r\n                                        <span className=\"mx-4\">{mapaGoogleRender.main.humidity}</span>\r\n                                        %\r\n                                        <div className=\"container mt-2\">\r\n                                        <div className=\"progress\">\r\n                                            <div className=\"progress-bar bg-warning\" role=\"progressbar\" style={{width:`${mapaGoogleRender.main.humidity}%`}} aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                        </div>\r\n                                        </div>\r\n                                        \r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6 py-4\">\r\n                                <div className=\"card\">\r\n                                        <h2 className=\" text-center mt-4\">sea level</h2>\r\n                                        <p className=\" text-center display-5\">\r\n                                        <img src={seaLevel} alt=\"temp_minima\" style={{width:\"60px\"}}/>\r\n                                        <span className=\"mx-4\">{parseFloat(mapaGoogleRender.main.sea_level) / 1000} </span>\r\n                                        MSNM</p>\r\n                                </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-12 col-md-6 py-4\">\r\n                                <div className=\"card\">\r\n                                        <h2 className=\" text-center mt-4\">Pressure</h2>\r\n                                        <p className=\"px-3 text-center display-5 d-flex aligns-item-center justify-content-center\">\r\n                                        <img src={barometer} alt=\"temp_minima\" style={{width:\"60px\"}}/>\r\n                                        <span className=\"mx-4\">{parseFloat((mapaGoogleRender.main.pressure) * 0.000987).toFixed(2)}</span>\r\n                                        atmosphere</p>\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"text-center my-4\">\r\n\r\n                                \r\n\r\n                                \r\n\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            </div>\r\n                            \r\n                        </div>\r\n                        \r\n                    }\r\n\r\n            </section>\r\n}\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Geolocation;","import './App.css';\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport {HashRouter, Route, Switch, Redirect} from \"react-router-dom\"\nimport BtnToogle from \"./Components/BtnToogle\";\nimport Navbar from \"./Components/Navbar\";\nimport logo from \"./images/BluewithBrownRopeTravelLogo.png\"\nimport DashBoard from './Components/DashBoard';\nimport Loader from './Components/Loader';\nimport Geolocation from './Components/Geolocation';\n\n\n\n\nfunction App() {\n\n\n  const [isOpenMenu, setIsOpenMenu] = useState(false);\n  const [isBegin, setIsBegin] = useState(false);\n  const [dataToSearch, setDataToSearch] = useState({});\n  const [renderCountry, setRenderCountry] = useState(null);\n  const [renderForecast, setRenderForecast] = useState(null);\n  const [renderCity, setRenderCity] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const [geolo, setGeolo] = useState(null);\n\n  \n\n  \n  const limpiarStorage =()=>{\n\n    \n    setIsBegin(false)\n  }\n\n  const empezar=()=>{\n\n    setIsBegin(true);\n  }\n\n  \n\n  useEffect(()=>{\n\n    \n    \n\n    setLoader(false)\n  }, [geolo])\n\n  \n  \n\n  useEffect(()=>{\n\n    \n    \n    let responseDataName=null;\n    let responseDataActuallyCountry=null;\n    let responseDataForecast=null;\n    let responseDataCityName=null;\n\n    const getDataName= async ()=>{\n\n      try {\n        const response = await axios.get(`https://restcountries.eu/rest/v2/name/${dataToSearch.countryName}`);\n        responseDataName=response.data[0].alpha3Code;\n        \n        \n\n\n        try {\n          const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${responseDataName}&appid=4d1b39580dfaf7a69c170f8b03abef5d&lang=es`);\n          responseDataActuallyCountry =response.data\n          \n  \n          \n\n          try {\n            const response = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${responseDataActuallyCountry.coord.lat}&lon=${responseDataActuallyCountry.coord.lon}&exclude=hourly&appid=4d1b39580dfaf7a69c170f8b03abef5d&lang=es`);\n            responseDataForecast=response.data;\n            \n\n            \n\n            try {\n              const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${dataToSearch.cityName}&appid=4d1b39580dfaf7a69c170f8b03abef5d&lang=es`);\n              responseDataCityName=response.data;\n\n              \n\n            } catch (err) {\n              \n              \n              console.log(err)\n            }\n            \n          } catch (err) {\n            \n            \n            console.log(err)\n          }\n          \n        } catch (err) {\n          \n          \n          console.log(err)\n        }\n\n      } catch (err) {\n        \n        \n        console.log(err)\n      }\n\n      \n\n      setRenderCountry(responseDataName)\n      // setRenderActuallyCountry(responseDataActuallyCountry)\n      setRenderForecast(responseDataForecast)\n      setRenderCity(responseDataCityName)\n      setLoader(false)\n      \n    }\n\n    getDataName()\n    \n\n  }, [dataToSearch])\n\n\n  \n  return (\n\n    <div className=\"App\">\n      <HashRouter>\n        {isBegin && <Navbar \n        isOpenMenu={isOpenMenu} \n        setIsOpenMenu={setIsOpenMenu} \n        dataToSearch={dataToSearch}\n        setDataToSearch={setDataToSearch}  \n        setLoader={setLoader}\n        setGeolo={setGeolo}\n        />}\n        {isBegin && <BtnToogle setIsOpenMenu={setIsOpenMenu} isOpenMenu={isOpenMenu}/>}\n        \n        {loader && <Loader/>}\n\n        <Switch>\n\n          <Route exact path=\"/\">\n          \n          {!isBegin ? \n            <div className=\"logo-empezar-bg\">\n              <div className=\"logo-empezar\">\n                <img src={logo} alt=\"isBegin\" className=\"img-fluid\"/>\n                <button className=\"btn btn-primary\" onClick={empezar}>\n                  get started\n                </button>\n              </div>\n            </div> : \n            \n            <Redirect to=\"/dashboard\"/>}\n            \n          </Route>\n\n          <Route exact path=\"/dashboard\">\n\n            {!isBegin && <Redirect to=\"/\"/>}\n            \n            <DashBoard \n            limpiarStorage={limpiarStorage} \n            \n            renderCity={renderCity} \n            renderCountry={renderCountry}\n            renderForecast={renderForecast}\n            geolo={geolo}\n            />\n          </Route>\n          \n          <Route exact path=\"/geolocation\">\n            <Geolocation geolo={geolo} limpiarStorage={limpiarStorage}/>\n          </Route>\n\n        </Switch>\n\n        \n        </HashRouter>\n    </div>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}